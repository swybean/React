후보군
react-redux & redux-toolkit
recoil
zustand
jotai
mobX

결정
Jotai 쓰기로 했음!!

~~~~~~~~~~~~~~~~~~~~~ 

참고한 사이트
https://dev.to/ishratumar/what-is-react-state-management-3na6

~~~~~~~~~~~~~~~~~~~~~ 

1. react-redux & redux-toolkit
장점
-> 큰 규모 프로젝트에 적합
-> 전역 상태 관리에 강력하다
-> 타입스크립트와 호환 좋음 (타입 안정성 쉽게 유지 가능)
-> 비동기 처리 로직에 유용
 1-1. 리덕스 툴킷
-> 리덕스의 복잡함을 줄이기 위해 나온 리덕스 공식 라이브러리
-> 리덕스 작업을 간소화, 실수 방지, 작성해야 할 코드 감소 등
-> 리덕스를 사용할 것이면 리덕스 툴킷을 사용하는 것을 추천

단점
-> 학습 곡선이 길다
-> 초반에 공부해야 할 개념이 많다.
-> 작성해야 할 코드가 많아진다.
-> 초기 설정이 복잡하다
-> 작은 프로젝트에는 과한 느낌..?


2. Zustand
장점
-> 작은 프로젝트에 적합
-> 상태가 단순히 JavaScript 객체로 관리되어 사용이 직관적
-> 성능 최적화에 유리 (불필요한 리렌더링을 피할 수 있어서)
-> 기능 확장이 쉬움.

단점
-> 복잡한 상태 관리에는 다소 부족
-> 큰 규모 프로젝트에 부적합 (확작성 문제)
-> 비동기 작업 관리 기능 부족


3. Jotai
장점
-> 타입스크립트와 호환 좋음
-> 리액트 훅들과 호환 좋음
-> 세밀한 리렌더링 가능 및 비동기 상태 관리 적합
-> 단순하고 가벼움

단점
-> 대규모 프로젝트에 부적합
-> 커뮤니티 및 생태계가 작음


4. MobX
장점
-> 자동 상태 관리, 코드가 간결하고 사용하기 쉬움.
-> 반응형 상태 관리 방식, 상태가 변경되면 자동으로 UI가 갱신됨.
-> 타입스크립트랑 호환성 좋음, 타입 안전성을 유지 가능
-> 상태 관리가 매우 직관적임.

단점
-> 상태 자동 업데이트 때문에 상태 변화 추적이 어려움 
-> 대규모에서는 부적합 (우리는 상관없는 단점인듯?)
-> 리액트와 호환 불안정, 일부 충돌 문제 있음



recoil : 탈락
-> 이거보다 jotai가 좋다, 이거 쓸거면 차라리 jotai를 사용해라


